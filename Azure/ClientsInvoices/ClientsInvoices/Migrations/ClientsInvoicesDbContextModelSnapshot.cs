// <auto-generated />
using System;
using ClientsInvoices.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClientsInvoices.Migrations
{
    [DbContext(typeof(ClientsInvoicesDbContext))]
    partial class ClientsInvoicesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientsInvoices.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Dan",
                            LastName = "Simmons"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Bob",
                            LastName = "Builder"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Scott",
                            LastName = "Markov"
                        });
                });

            modelBuilder.Entity("ClientsInvoices.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectID");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountDue = 34000m,
                            DueDate = new DateTime(2016, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectID = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountDue = 50000m,
                            DueDate = new DateTime(2016, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectID = 2
                        },
                        new
                        {
                            Id = 3,
                            AmountDue = 2000m,
                            DueDate = new DateTime(2016, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectID = 3
                        });
                });

            modelBuilder.Entity("ClientsInvoices.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            EndDate = new DateTime(2016, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2015, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Entity Framework Project"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            EndDate = new DateTime(2016, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2015, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bob's Important Project"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            EndDate = new DateTime(2016, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2015, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Some Other Project"
                        });
                });

            modelBuilder.Entity("ClientsInvoices.Models.Invoice", b =>
                {
                    b.HasOne("ClientsInvoices.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ClientsInvoices.Models.Project", b =>
                {
                    b.HasOne("ClientsInvoices.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
