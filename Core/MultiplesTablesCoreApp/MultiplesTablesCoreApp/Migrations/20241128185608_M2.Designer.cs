// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiplesTablesCoreApp.Data;

#nullable disable

namespace MultiplesTablesCoreApp.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20241128185608_M2")]
    partial class M2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MultiplesTablesCoreApp.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<int>("SeatCapacity")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseTitle = "Introduction to Programming",
                            InstructorID = 1,
                            SeatCapacity = 30
                        },
                        new
                        {
                            CourseId = 2,
                            CourseTitle = "Database Systems",
                            InstructorID = 2,
                            SeatCapacity = 25
                        },
                        new
                        {
                            CourseId = 3,
                            CourseTitle = "Advanced Mathematics",
                            InstructorID = 3,
                            SeatCapacity = 20
                        });
                });

            modelBuilder.Entity("MultiplesTablesCoreApp.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            InstructorName = "Prof.Alice Johnson"
                        },
                        new
                        {
                            InstructorId = 2,
                            InstructorName = "Dr.Bob Smith"
                        },
                        new
                        {
                            InstructorId = 3,
                            InstructorName = "Dra.Carol Brown"
                        });
                });

            modelBuilder.Entity("MultiplesTablesCoreApp.Models.Course", b =>
                {
                    b.HasOne("MultiplesTablesCoreApp.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });
#pragma warning restore 612, 618
        }
    }
}
