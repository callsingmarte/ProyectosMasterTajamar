@page "/edit-article/{id:int}"
@using PedidosBlazor.Models;
@using PedidosBlazor.Services;
@rendermode InteractiveServer

@inject IArticleService ArticleServices
@inject NavigationManager Navigation

<h3>EditArticle</h3>

@if(article == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@article" OnValidSubmit="HandleValidSubmit" class="article-card">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="name"> Name </label>
            <InputText id="name" class="form-control" @bind-Value="article.Name" />
        </div>
        <div class="form-group">
            <label for="category"> Category</label>
            <InputText id="category" class="form-control" @bind-Value="article.Category" />
        </div>
        <div class="form-group">
            <label for="price"> Price</label>
            <InputNumber id="price" class="form-control" @bind-Value="article.Price" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }

    private Article? article;

    protected override async Task OnInitializedAsync()
    {
        article = await ArticleServices.GetArticleByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await ArticleServices.UpdateArticleAsync(article);
        Navigation.NavigateTo("/articles");
    }

    private void CancelEdit()
    {
        Navigation.NavigateTo("/articles");
    }
}
