// <auto-generated />
using System;
using LibreriaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibreriaAPI.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    partial class BibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibreriaAPI.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Jane Austen"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "J.K. Rowling"
                        });
                });

            modelBuilder.Entity("LibreriaAPI.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnioPublicacion = 1967,
                            AutorId = 1,
                            Titulo = "Cien años de soledad"
                        },
                        new
                        {
                            Id = 2,
                            AnioPublicacion = 1813,
                            AutorId = 2,
                            Titulo = "Orgullo y prejuicio"
                        },
                        new
                        {
                            Id = 3,
                            AnioPublicacion = 1997,
                            AutorId = 3,
                            Titulo = "Harry Potter y la piedra filosofal"
                        });
                });

            modelBuilder.Entity("LibreriaAPI.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Prestamos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaDevolucion = new DateTime(2024, 12, 8, 18, 9, 55, 824, DateTimeKind.Local).AddTicks(721),
                            FechaPrestamo = new DateTime(2024, 11, 23, 18, 9, 55, 821, DateTimeKind.Local).AddTicks(7685),
                            LibroId = 1,
                            Usuario = "usuario1@example.com"
                        },
                        new
                        {
                            Id = 2,
                            FechaDevolucion = new DateTime(2024, 11, 28, 18, 9, 55, 824, DateTimeKind.Local).AddTicks(1041),
                            FechaPrestamo = new DateTime(2024, 11, 13, 18, 9, 55, 824, DateTimeKind.Local).AddTicks(1031),
                            LibroId = 2,
                            Usuario = "usuario2@example.com"
                        });
                });

            modelBuilder.Entity("LibreriaAPI.Models.Libro", b =>
                {
                    b.HasOne("LibreriaAPI.Models.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("LibreriaAPI.Models.Prestamo", b =>
                {
                    b.HasOne("LibreriaAPI.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("LibreriaAPI.Models.Autor", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
