@page
@using X.PagedList.Mvc.Core
@model BookSwap.Pages.Books.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>
<form>
    <div class="row">
        <div class="col-auto m-0">
            <select asp-for="BookGenre" asp-items="Model.Genres" class="form-select">
                <option value="">All</option>
            </select>
        </div>
        <div class="col-auto m-0">
            <input type="submit" value="Filter" class="btn btn-primary" />
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].IsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].LoanDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].ReturnDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Book) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReturnDate)
            </td>
            <td>
                <a asp-page="./ChangeStatus" asp-route-id="@item.Id" class="btn btn-outline-warning">Change Status</a> |
                <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-info">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="text-center">
    @Html.PagedListPager(
            Model.Book,
            page => Url.Page("./Index", new { pageNumber = page }),
            new PagedListRenderOptions
    {
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,

        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        LinkToFirstPageFormat = "First",
        LinkToLastPageFormat = "Last",
        LinkToPreviousPageFormat = "Prev",
        LinkToNextPageFormat = "Next",
        PageClasses = new[] { "page-link" }
    })
</div>